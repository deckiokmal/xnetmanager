"""Database Updated for simplify

Revision ID: 7050906050ba
Revises: 
Create Date: 2025-03-08 21:10:30.021024

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7050906050ba'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('template_manager',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('template_name', sa.String(length=100), nullable=False),
    sa.Column('parameter_name', sa.String(length=100), nullable=False),
    sa.Column('vendor', sa.String(length=100), nullable=False),
    sa.Column('version', sa.String(length=10), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('created_by', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('parameter_name'),
    sa.UniqueConstraint('template_name')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('profile_picture', sa.String(length=255), nullable=True),
    sa.Column('company', sa.String(length=255), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('division', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('date_joined', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('time_zone', sa.String(length=50), nullable=True),
    sa.Column('is_2fa_enabled', sa.Boolean(), nullable=False),
    sa.Column('secret_token', sa.String(), nullable=True),
    sa.Column('email_verification_token', sa.String(), nullable=True),
    sa.Column('force_logout', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('secret_token')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('configuration_manager',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('config_name', sa.String(length=100), nullable=False),
    sa.Column('vendor', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Text(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('config_name')
    )
    with op.batch_alter_table('configuration_manager', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_configuration_manager_user_id'), ['user_id'], unique=False)

    op.create_table('device_manager',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('device_name', sa.String(length=100), nullable=False),
    sa.Column('vendor', sa.String(length=100), nullable=False),
    sa.Column('ip_address', sa.String(length=20), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('ssh', sa.String(length=5), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('device_name'),
    sa.UniqueConstraint('ip_address')
    )
    with op.batch_alter_table('device_manager', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_device_manager_user_id'), ['user_id'], unique=False)

    op.create_table('role_permissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=True),
    sa.Column('permission_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('role_permissions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_role_permissions_permission_id'), ['permission_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_role_permissions_role_id'), ['role_id'], unique=False)

    op.create_table('user_roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('role_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_roles_role_id'), ['role_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_roles_user_id'), ['user_id'], unique=False)

    op.create_table('ai_recommendations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('device_id', sa.UUID(), nullable=False, comment='Foreign key referencing the device this recommendation applies to'),
    sa.Column('title', sa.String(length=255), nullable=False, comment='Short title describing the recommendation'),
    sa.Column('description', sa.Text(), nullable=True, comment='Detailed description of the recommendation'),
    sa.Column('command', sa.Text(), nullable=False, comment='CLI commands to implement the recommendation'),
    sa.Column('risk_level', sa.String(length=50), nullable=False, comment='Risk level (low, medium, high)'),
    sa.Column('impact_area', sa.String(length=255), nullable=False, comment='Impact area (security, availability, performance)'),
    sa.Column('is_duplicate', sa.Boolean(), nullable=True, comment='Flag marking duplicate recommendations'),
    sa.Column('embedding', sa.JSON(), nullable=True, comment='Embedding vector for similarity checking'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Timestamp when the recommendation was generated'),
    sa.Column('is_applied', sa.Boolean(), nullable=True, comment='Flag indicating whether the recommendation has been applied'),
    sa.Column('applied_at', sa.DateTime(), nullable=True, comment='Timestamp when the recommendation was applied'),
    sa.Column('priority', sa.Integer(), nullable=False, comment='Priority level (1: Low, 2: Medium, 3: High)'),
    sa.Column('status', sa.String(length=50), nullable=False, comment='Status (generated, applied, failed)'),
    sa.Column('applied_by', sa.UUID(), nullable=True, comment='User who applied the recommendation'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='Error message if the recommendation application failed'),
    sa.ForeignKeyConstraint(['applied_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['device_id'], ['device_manager.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='Stores AI-generated recommendations for network devices'
    )
    with op.batch_alter_table('ai_recommendations', schema=None) as batch_op:
        batch_op.create_index('idx_duplicate_status', ['is_duplicate'], unique=False)
        batch_op.create_index('idx_recommendation_device', ['device_id', 'created_at'], unique=False)
        batch_op.create_index('idx_recommendation_priority', ['priority', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_ai_recommendations_is_applied'), ['is_applied'], unique=False)
        batch_op.create_index(batch_op.f('ix_ai_recommendations_is_duplicate'), ['is_duplicate'], unique=False)

    op.create_table('backup_data',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('backup_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('backup_path', sa.String(length=255), nullable=False),
    sa.Column('is_encrypted', sa.Boolean(), nullable=True),
    sa.Column('is_compressed', sa.Boolean(), nullable=True),
    sa.Column('integrity_check', sa.String(length=64), nullable=True),
    sa.Column('backup_type', sa.String(length=50), nullable=False),
    sa.Column('next_scheduled_backup', sa.DateTime(), nullable=True),
    sa.Column('retention_period_days', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('device_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['device_manager.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('backup_data', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_backup_data_user_id'), ['user_id'], unique=False)

    op.create_table('user_configuration_share',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('configuration_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['configuration_id'], ['configuration_manager.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_configuration_share', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_configuration_share_configuration_id'), ['configuration_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_configuration_share_user_id'), ['user_id'], unique=False)

    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('device_id', sa.UUID(), nullable=False),
    sa.Column('backup_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('performed_by', sa.UUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['backup_id'], ['backup_data.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['device_manager.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['performed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audit_logs_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_backup_id'), ['backup_id'], unique=False)

    op.create_table('backup_tags',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('backup_id', sa.UUID(), nullable=False),
    sa.Column('tag', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['backup_id'], ['backup_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('backup_tags', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_backup_tags_backup_id'), ['backup_id'], unique=False)

    op.create_table('user_backup_share',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('backup_id', sa.UUID(), nullable=False),
    sa.Column('permission_level', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['backup_id'], ['backup_data.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_backup_share', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_backup_share_backup_id'), ['backup_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_backup_share_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_backup_share', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_backup_share_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_backup_share_backup_id'))

    op.drop_table('user_backup_share')
    with op.batch_alter_table('backup_tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_backup_tags_backup_id'))

    op.drop_table('backup_tags')
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audit_logs_backup_id'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_action'))

    op.drop_table('audit_logs')
    with op.batch_alter_table('user_configuration_share', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_configuration_share_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_configuration_share_configuration_id'))

    op.drop_table('user_configuration_share')
    with op.batch_alter_table('backup_data', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_backup_data_user_id'))

    op.drop_table('backup_data')
    with op.batch_alter_table('ai_recommendations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ai_recommendations_is_duplicate'))
        batch_op.drop_index(batch_op.f('ix_ai_recommendations_is_applied'))
        batch_op.drop_index('idx_recommendation_priority')
        batch_op.drop_index('idx_recommendation_device')
        batch_op.drop_index('idx_duplicate_status')

    op.drop_table('ai_recommendations')
    with op.batch_alter_table('user_roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_roles_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_roles_role_id'))

    op.drop_table('user_roles')
    with op.batch_alter_table('role_permissions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_role_permissions_role_id'))
        batch_op.drop_index(batch_op.f('ix_role_permissions_permission_id'))

    op.drop_table('role_permissions')
    with op.batch_alter_table('device_manager', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_device_manager_user_id'))

    op.drop_table('device_manager')
    with op.batch_alter_table('configuration_manager', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_configuration_manager_user_id'))

    op.drop_table('configuration_manager')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('template_manager')
    op.drop_table('roles')
    op.drop_table('permissions')
    # ### end Alembic commands ###
