"""backup database migration

Revision ID: 413f577bb8fb
Revises: 56f0763e31e9
Create Date: 2024-09-14 14:21:17.231843

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '413f577bb8fb'
down_revision = '56f0763e31e9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backup_audit_logs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('backup_id', sa.String(length=36), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('performed_by', sa.String(length=36), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['backup_id'], ['backup_data.id'], ),
    sa.ForeignKeyConstraint(['performed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('backup_audit_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_backup_audit_logs_backup_id'), ['backup_id'], unique=False)

    op.create_table('backup_tags',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('backup_id', sa.String(length=36), nullable=False),
    sa.Column('tag', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['backup_id'], ['backup_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('backup_tags', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_backup_tags_backup_id'), ['backup_id'], unique=False)

    with op.batch_alter_table('backup_data', schema=None) as batch_op:
        batch_op.add_column(sa.Column('backup_path', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('is_encrypted', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_compressed', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('integrity_check', sa.String(length=64), nullable=True))
        batch_op.add_column(sa.Column('backup_type', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('next_scheduled_backup', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('retention_period_days', sa.Integer(), nullable=True))

    with op.batch_alter_table('user_backup_share', schema=None) as batch_op:
        batch_op.add_column(sa.Column('permission_level', sa.String(length=50), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_backup_share', schema=None) as batch_op:
        batch_op.drop_column('permission_level')

    with op.batch_alter_table('backup_data', schema=None) as batch_op:
        batch_op.drop_column('retention_period_days')
        batch_op.drop_column('next_scheduled_backup')
        batch_op.drop_column('backup_type')
        batch_op.drop_column('integrity_check')
        batch_op.drop_column('is_compressed')
        batch_op.drop_column('is_encrypted')
        batch_op.drop_column('backup_path')

    with op.batch_alter_table('backup_tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_backup_tags_backup_id'))

    op.drop_table('backup_tags')
    with op.batch_alter_table('backup_audit_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_backup_audit_logs_backup_id'))

    op.drop_table('backup_audit_logs')
    # ### end Alembic commands ###
