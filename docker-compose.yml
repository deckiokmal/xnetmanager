services:
  xnetmanager:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: xnetmanager_flask
    volumes:
      - xnetmanager_backups:/data/backups
			- xnetmanager_configurations:/data/configurations
			- xnetmanager_templates:/data/templates
      - .env:/app/.env:ro # Menggunakan akses read-only untuk keamanan
    env_file:
      - .env
    ports:
      - "8000:8000"
    command: ["/bin/sh", "-c", "./entrypoint.sh"]
    networks:
      - xnetmanager_bridge
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: xnetmanager_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - xnetmanager_bridge
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:latest
    container_name: xnetmanager_adminer
    depends_on:
      - db
    ports:
      - "8080:8080"
    networks:
      - xnetmanager_bridge
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: xnetmanager_nginx
    volumes:
      - ./static:/var/www/static
      - ./default.conf:/etc/nginx/conf.d/default.conf:ro # Menggunakan akses read-only
    ports:
      - "80:80"
    networks:
      - xnetmanager_bridge
    depends_on:
      - xnetmanager
    restart: unless-stopped

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: xnetmanager_cloudflared
    command: tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}
    env_file:
      - .env
    networks:
      - xnetmanager_bridge
    restart: unless-stopped

volumes:
  postgres_data: # Volume untuk menyimpan data PostgreSQL
  xnetmanager_backups: # Volume untuk menyimpan data backups
  xnetmanager_configurations: # Volume untuk menyimpan konfigurasi
  xnetmanager_templates: # Volume untuk menyimpan template

networks:
  xnetmanager_bridge:
    driver: bridge
